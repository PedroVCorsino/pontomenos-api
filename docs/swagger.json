{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API desenvolvida para o hackthon da FIAP PósTech.",
        "title": "Pontomenos API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth": {
            "post": {
                "description": "Autentica um usuário com login e senha",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Autentica um usuário",
                "parameters": [
                    {
                        "description": "Dados de Login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token JWT",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Mensagem de erro para requisição inválida",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Mensagem de erro para login ou senha inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ponto": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Registra o ponto do usuário com o login obtido do JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ponto"
                ],
                "summary": "Registra ponto",
                "responses": {
                    "204": {
                        "description": "Ponto registrado com sucesso"
                    },
                    "401": {
                        "description": "Não autorizado"
                    },
                    "500": {
                        "description": "Erro interno do servidor"
                    }
                }
            }
        },
        "/registros/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retorna um registro de ponto dado seu ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registros"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Registro de Ponto",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RegistroPonto"
                        }
                    }
                }
            }
        },
        "/usuarios": {
            "post": {
                "description": "Adiciona um novo usuário com as informações fornecidas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "usuarios"
                ],
                "parameters": [
                    {
                        "description": "Informações do Usuário",
                        "name": "usuario",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Usuario"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Usuario"
                        }
                    }
                }
            }
        },
        "/usuarios/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retorna um usuário dado seu ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "usuarios"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Usuario"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Exclui um usuário dado seu ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "usuarios"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Usuário excluído com sucesso!",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Atualiza parcialmente um usuário existente com as informações fornecidas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "usuarios"
                ],
                "summary": "Atualiza informações de um usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campos do Usuário para Atualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário atualizado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.LoginData": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "senha": {
                    "type": "string"
                }
            }
        },
        "models.RegistroPonto": {
            "type": "object",
            "properties": {
                "data_hora": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "tipo_ponto": {
                    "$ref": "#/definitions/models.TipoPonto"
                },
                "usuario_id": {
                    "type": "integer"
                }
            }
        },
        "models.TipoPonto": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-comments": {
                "Entrada": "iota promove a enumeração automática, começando de 0"
            },
            "x-enum-varnames": [
                "Entrada",
                "SaidaIntervalo",
                "EntradaIntervalo",
                "Saida",
                "MaxLimit"
            ]
        },
        "models.Usuario": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nome": {
                    "type": "string"
                },
                "senha": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}