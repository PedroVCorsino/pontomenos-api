basePath: /
definitions:
  controllers.LoginData:
    properties:
      login:
        type: string
      senha:
        type: string
    type: object
  controllers.RegistroPontoResponse:
    properties:
      data_hora:
        type: string
      id:
        type: integer
      tipo_ponto:
        type: string
      usuario_id:
        type: integer
    type: object
  models.RegistroPonto:
    properties:
      data_hora:
        type: string
      id:
        type: integer
      tipo_ponto:
        $ref: '#/definitions/models.TipoPonto'
      usuario_id:
        type: integer
    type: object
  models.TipoPonto:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-comments:
      Entrada: iota promove a enumeração automática, começando de 0
    x-enum-varnames:
    - Entrada
    - SaidaIntervalo
    - EntradaIntervalo
    - Saida
    - MaxLimit
  models.Usuario:
    properties:
      email:
        type: string
      id:
        type: integer
      matricula:
        type: string
      nome:
        type: string
      senha:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API desenvolvida para o hackthon da FIAP PósTech.
  title: Pontomenos API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Autentica um usuário com login e senha
      parameters:
      - description: Dados de Login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: Token JWT
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Mensagem de erro para requisição inválida
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Mensagem de erro para login ou senha inválidos
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Autentica um usuário
      tags:
      - auth
  /ponto:
    post:
      consumes:
      - application/json
      description: Registra o ponto do usuário com o login obtido do JWT
      produces:
      - application/json
      responses:
        "204":
          description: Ponto registrado com sucesso
        "401":
          description: Não autorizado
        "500":
          description: Erro interno do servidor
      security:
      - Bearer: []
      summary: Registra ponto
      tags:
      - ponto
  /registros/{id}:
    get:
      consumes:
      - application/json
      description: Retorna um registro de ponto dado seu ID
      parameters:
      - description: ID do Registro de Ponto
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegistroPonto'
      security:
      - Bearer: []
      tags:
      - registros
  /registros/enviar-espelho:
    get:
      consumes:
      - application/json
      description: Gera e envia por e-mail o espelho de ponto mensal para o usuário
        especificado.
      parameters:
      - description: ID do Usuário
        in: query
        name: usuarioID
        required: true
        type: string
      - description: E-mail do Destinatário
        in: query
        name: email
        required: true
        type: string
      - description: Mês do Relatório
        in: query
        name: mes
        required: true
        type: integer
      - description: Ano do Relatório
        in: query
        name: ano
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Relatório enviado com sucesso'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Descrição do erro'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Erro ao enviar e-mail'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      tags:
      - registros
  /registros/visualizar:
    get:
      consumes:
      - application/json
      description: Retorna registros de ponto de um usuário para uma data específica,
        incluindo o total de horas trabalhadas
      parameters:
      - description: ID do Usuário
        in: path
        name: usuario_id
        required: true
        type: integer
      - description: 'Data dos Registros de Ponto (formato: YYYY-MM-DD)'
        in: query
        name: data
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Uma lista de registros de ponto com total de horas trabalhadas
          schema:
            items:
              $ref: '#/definitions/controllers.RegistroPontoResponse'
            type: array
      security:
      - Bearer: []
      tags:
      - registros
  /usuarios:
    post:
      consumes:
      - application/json
      description: Adiciona um novo usuário com as informações fornecidas
      parameters:
      - description: Informações do Usuário
        in: body
        name: usuario
        required: true
        schema:
          $ref: '#/definitions/models.Usuario'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Usuario'
      tags:
      - usuarios
  /usuarios/{id}:
    delete:
      consumes:
      - application/json
      description: Exclui um usuário dado seu ID
      parameters:
      - description: ID do Usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Usuário excluído com sucesso!'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      tags:
      - usuarios
    get:
      consumes:
      - application/json
      description: Retorna um usuário dado seu ID
      parameters:
      - description: ID do Usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Usuario'
      security:
      - Bearer: []
      tags:
      - usuarios
    patch:
      consumes:
      - application/json
      description: Atualiza parcialmente um usuário existente com as informações fornecidas
      parameters:
      - description: ID do Usuário
        in: path
        name: id
        required: true
        type: string
      - description: Campos do Usuário para Atualizar
        in: body
        name: body
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Usuário atualizado com sucesso
          schema:
            additionalProperties: true
            type: object
      summary: Atualiza informações de um usuário
      tags:
      - usuarios
schemes:
- http
- https
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
