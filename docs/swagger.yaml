basePath: /
definitions:
  controllers.LoginData:
    properties:
      login:
        type: string
      senha:
        type: string
    type: object
  models.Usuario:
    properties:
      email:
        type: string
      id:
        type: integer
      nome:
        type: string
      senha:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API desenvolvida para o hackthon da FIAP PósTech.
  title: Pontomenos API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Autentica um usuário com login e senha
      parameters:
      - description: Dados de Login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: Token JWT
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Mensagem de erro para requisição inválida
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Mensagem de erro para login ou senha inválidos
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Autentica um usuário
      tags:
      - auth
  /usuarios:
    post:
      consumes:
      - application/json
      description: Adiciona um novo usuário com as informações fornecidas
      parameters:
      - description: Informações do Usuário
        in: body
        name: usuario
        required: true
        schema:
          $ref: '#/definitions/models.Usuario'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Usuario'
      tags:
      - usuarios
  /usuarios/{id}:
    delete:
      consumes:
      - application/json
      description: Exclui um usuário dado seu ID
      parameters:
      - description: ID do Usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Usuário excluído com sucesso!'
          schema:
            additionalProperties:
              type: string
            type: object
      tags:
      - usuarios
    get:
      consumes:
      - application/json
      description: Retorna um usuário dado seu ID
      parameters:
      - description: ID do Usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Usuario'
      security:
      - Bearer: []
      tags:
      - usuarios
    patch:
      consumes:
      - application/json
      description: Atualiza parcialmente um usuário existente com as informações fornecidas
      parameters:
      - description: ID do Usuário
        in: path
        name: id
        required: true
        type: string
      - description: Campos do Usuário para Atualizar
        in: body
        name: body
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Usuário atualizado com sucesso
          schema:
            additionalProperties: true
            type: object
      summary: Atualiza informações de um usuário
      tags:
      - usuarios
schemes:
- http
- https
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
